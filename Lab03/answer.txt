1. Câu hỏi: Những lớp nào là tổng hợp (aggregates) của các lớp khác? Có kiểm tra tất cả các constructor của các lớp "tổng thể" để xem chúng có khởi tạo các phần của mình không?
Trả lời: Lớp Media được tổng hợp với các lớp Cart và Store. Điều này có nghĩa là các constructor của các lớp đó nên khởi tạo các đối tượng mà chúng cấu thành.

2. Câu hỏi: Lớp nào nên triển khai giao diện Comparable?
Trả lời: Một lớp nên triển khai giao diện Comparable nếu ta muốn xác định thứ tự mặc định cho các thể hiện của lớp đó.

3. Câu hỏi: Trong các lớp đó, bạn nên triển khai phương thức compareTo() như thế nào để phản ánh đúng thứ tự mong muốn?
Trả lời: Để triển khai compareTo(), ta định nghĩa phương thức sao cho:

Trả về số âm nếu đối tượng hiện tại nhỏ hơn đối tượng khác.

Trả về 0 nếu chúng bằng nhau.

Trả về số dương nếu đối tượng hiện tại lớn hơn đối tượng khác.

4. Câu hỏi: Ta có thể có hai quy tắc sắp xếp khác nhau cho cùng một loại đối tượng (ví dụ: sắp theo tiêu đề rồi đến giá, hoặc sắp theo giá rồi đến tiêu đề) nếu dùng cách tiếp cận Comparable không?
Trả lời: Không, giao diện Comparable chỉ hỗ trợ một thứ tự mặc định duy nhất thông qua phương thức compareTo(). Nếu muốn có nhiều chiến lược sắp xếp (ví dụ: theo tiêu đề rồi giá, hoặc theo giá rồi tiêu đề), ta nên sử dụng các Comparator riêng biệt.

5. Câu hỏi: Giả sử đĩa DVD có quy tắc sắp xếp khác với các loại media khác, cụ thể là theo tiêu đề, sau đó là độ dài giảm dần, rồi đến giá. Bạn sẽ sửa mã như thế nào để hỗ trợ điều này?
Trả lời: Để hỗ trợ logic sắp xếp khác biệt cho DVD, ta có thể ghi đè (override) phương thức compareTo() cụ thể trong lớp DigitalVideoDisc, và định nghĩa thứ tự sắp xếp tùy chỉnh như sau:

So sánh theo tiêu đề,

Sau đó theo độ dài (giảm dần),

Cuối cùng là theo giá.

